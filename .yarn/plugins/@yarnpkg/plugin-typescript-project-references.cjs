/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-typescript-project-references",
factory: function (require) {
var plugin=(()=>{var f=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var p=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(o,r)=>(typeof require<"u"?require:o)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var P=(e,o)=>{for(var r in o)f(e,r,{get:o[r],enumerable:!0})},u=(e,o,r,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of g(o))!k.call(e,s)&&s!==r&&f(e,s,{get:()=>o[s],enumerable:!(n=y(o,s))||n.enumerable});return e};var h=e=>u(f({},"__esModule",{value:!0}),e);var C={};P(C,{default:()=>j});var l=p("@yarnpkg/core"),t=p("@yarnpkg/fslib"),d=e=>t.ppath.join(e.cwd,"tsconfig.json"),W=({project:e,workspace:o})=>l.miscUtils.mapAndFilter(o.dependencies,([r,n])=>{let s=e.tryWorkspaceByDescriptor(n);return!s||s===o?l.miscUtils.mapAndFilter.skip:s}),w=({referencedWorkspaces:e,tsconfig:o})=>{var s;let r=!1,n;if(e.length===0)typeof o.references<"u"&&(r=!0);else{let i=new Set((s=o.references)==null?void 0:s.map(a=>a.path));n=e.map(a=>(i.has(a)||(r=!0),{path:a}))}return{modified:r,references:n}},x=async({project:e,workspace:o})=>{let r=d(o);if(!await t.xfs.existsPromise(r))return;let n=W({project:e,workspace:o}).filter(c=>t.xfs.existsSync(d(c))).map(c=>t.ppath.relative(o.cwd,c.cwd)),s=await t.xfs.readJsonPromise(r),{modified:i,references:a}=w({referencedWorkspaces:n,tsconfig:s});i&&await t.xfs.writeJsonPromise(r,{...s,references:a})},m=e=>{Promise.all(e.workspaces.map(async o=>{await x({project:e,workspace:o})})).catch(()=>({}))};var J={hooks:{afterAllInstalled:m}},j=J;return h(C);})();
return plugin;
}
};
