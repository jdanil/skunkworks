extends:
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
overrides:
  - files:
      - "**/*.ts?(x)"
    parser: "@typescript-eslint/parser"
  - files:
      - "**/*.spec.{[cm]js,[jt]s?(x)}"
      - "**/*.test.{[cm]js,[jt]s?(x)}"
    rules:
      "@typescript-eslint/no-magic-numbers": off # not a concern for tests
plugins:
  - "@typescript-eslint"
rules:
  "@typescript-eslint/array-type": # recommended off
    - error
    - default: array-simple
  "@typescript-eslint/ban-ts-comment":
    - error
    - ts-expect-error: true # recommended allow-with-description
  "@typescript-eslint/class-literal-property-style": error # recommended off
  "@typescript-eslint/consistent-indexed-object-style": error # recommended off
  "@typescript-eslint/consistent-type-assertions": error # recommended off
  "@typescript-eslint/consistent-type-definitions": # recommended off
    - error
    - type # recommended interface
  "@typescript-eslint/consistent-type-imports": error # recommended off
  "@typescript-eslint/dot-notation": error # recommended off
  "@typescript-eslint/explicit-function-return-type": error # recommended off
  "@typescript-eslint/explicit-member-accessibility": error # recommended off
  "@typescript-eslint/explicit-module-boundary-types": error # recommended warn
  "@typescript-eslint/init-declarations": error # recommended off
  "@typescript-eslint/lines-between-class-members": # recommended off
    - error
    - always
    - exceptAfterSingleLine: true
  "@typescript-eslint/member-delimiter-style": error # recommended off
  "@typescript-eslint/member-ordering": error # recommended off
  "@typescript-eslint/method-signature-style": error # recommended off
  "@typescript-eslint/naming-convention": # recommended off
    - error
    - # default
      selector: default
      format:
        - camelCase
      leadingUnderscore: allow
      trailingUnderscore: allow
    - # default
      selector: variable
      format:
        - camelCase
        - UPPER_CASE
        - PascalCase # https://airbnb.io/javascript/react/#naming
      leadingUnderscore: allow
      trailingUnderscore: allow
    - # default
      selector: typeLike
      format:
        - PascalCase
    - # https://github.com/basarat/typescript-book/blob/master/docs/styleguide/styleguide.md#enum
      selector: enumMember
      format:
        - PascalCase
    - # previously @typescript-eslint/generic-type-naming
      selector: typeParameter
      format:
        - PascalCase
      prefix:
        - T
  "@typescript-eslint/no-base-to-string": error # recommended off
  "@typescript-eslint/no-confusing-void-expression": error # recommended off
  "@typescript-eslint/no-duplicate-imports": error # recommended off
  "@typescript-eslint/no-dynamic-delete": error # recommended off
  "@typescript-eslint/no-explicit-any": error # recommended warn
  "@typescript-eslint/no-extraneous-class": error # recommended off
  "@typescript-eslint/no-implicit-any-catch": error # recommended off
  "@typescript-eslint/no-invalid-this": error # recommended off
  "@typescript-eslint/no-invalid-void-type": error # recommended off
  "@typescript-eslint/no-loop-func": error # recommended off
  "@typescript-eslint/no-loss-of-precision": error # recommended off
  "@typescript-eslint/no-magic-numbers": error # recommended off
  "@typescript-eslint/no-parameter-properties": error # recommended off
  "@typescript-eslint/no-redeclare": error # recommended off
  "@typescript-eslint/no-require-imports": error # recommended off
  "@typescript-eslint/no-shadow": error # recommended off
  "@typescript-eslint/no-throw-literal": error # recommended off
  "@typescript-eslint/no-type-alias": error # recommended off
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": error # recommended off
  "@typescript-eslint/no-unnecessary-condition": error # recommended off
  "@typescript-eslint/no-unnecessary-qualifier": error # recommended off
  "@typescript-eslint/no-unnecessary-type-arguments": error # recommended off
  "@typescript-eslint/no-unnecessary-type-constraint": error # recommended off
  "@typescript-eslint/no-unsafe-argument": error # recommended off
  "@typescript-eslint/no-unused-expressions": error # recommended off
  no-use-before-define: off # eslint base rule, has extension rule
  "@typescript-eslint/no-use-before-define": error # recommended off
  "@typescript-eslint/no-useless-constructor": error # recommended off
  "@typescript-eslint/non-nullable-type-assertion-style": error # recommended off
  "@typescript-eslint/prefer-as-const": error # recommended warn
  "@typescript-eslint/prefer-enum-initializers": error # recommended off
  "@typescript-eslint/prefer-for-of": error # recommended off
  "@typescript-eslint/prefer-function-type": error # recommended off
  "@typescript-eslint/prefer-includes": error # recommended off
  "@typescript-eslint/prefer-literal-enum-member": error # recommended off
  "@typescript-eslint/prefer-nullish-coalescing": error # recommended off
  "@typescript-eslint/prefer-optional-chain": error # recommended off
  "@typescript-eslint/prefer-readonly": error # recommended off
  "@typescript-eslint/prefer-readonly-parameter-types": error # recommended off
  "@typescript-eslint/prefer-reduce-type-parameter": error # recommended off
  "@typescript-eslint/prefer-string-starts-ends-with": error # recommended off
  "@typescript-eslint/prefer-ts-expect-error": error # recommended off
  "@typescript-eslint/promise-function-async": error # recommended off
  "@typescript-eslint/require-array-sort-compare": error # recommended off
  "@typescript-eslint/return-await": error # recommended off
  "@typescript-eslint/switch-exhaustiveness-check": error # recommended off
  "@typescript-eslint/unified-signatures": error # recommended off
