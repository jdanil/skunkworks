name: ci
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Test on node ${{matrix.node}} and ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        node:
          - 10
          - 12
          - 14
        os:
          #- macos-latest
          - ubuntu-latest
          #- windows-latest
    steps:
      - uses: actions/checkout@v2.3.3
      #  with:
      #    lfs: true
      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-hashes
      - uses: actions/cache@v2.1.2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{matrix.os}}-lfs-${{hashFiles('.lfs-hashes')}}
          restore-keys: |
            ${{matrix.os}}-lfs-
      - run: git lfs pull
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{matrix.node}}
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.2
        id: yarn-cache
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{matrix.os}}-${{matrix.node}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{matrix.os}}-${{matrix.node}}-yarn-
      - run: yarn install --frozen-lockfile --offline
        if: steps.yarn-cache.outputs.cache-hit == 'true'
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn compile
      - run: yarn test:ci
      - run: yarn lint:all
      - run: yarn fmt:all:check
      - run: yarn build
      - run: yarn bundlesize
      - run: yarn cy:ci
    timeout-minutes: 15
#  # https://help.github.com/en/actions/language-and-framework-guides/publishing-nodejs-packages
#  publish:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.3
#      #  with:
#      #    lfs: true
#      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-hashes
#      - uses: actions/cache@v2.1.2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{runner.os}}-lfs-${{hashFiles('.lfs-hashes')}}
#          restore-keys: |
#            ${{runner.os}}-lfs-
#      - run: git lfs pull
#      - uses: actions/setup-node@v2.1.2
#        with:
#          node-version: 14
#          registry-url: "https://registry.npmjs.org"
#      - id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - uses: actions/cache@v2.1.2
#        id: yarn-cache
#        with:
#          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
#          key: ${{runner.os}}-${{matrix.node}}-yarn-${{hashFiles('**/yarn.lock')}}
#          restore-keys: |
#            ${{runner.os}}-${{matrix.node}}-yarn-
#      - run: yarn install --frozen-lockfile --offline
#        if: steps.yarn-cache.outputs.cache-hit == 'true'
#      - run: yarn install --frozen-lockfile
#        if: steps.yarn-cache.outputs.cache-hit != 'true'
#      - run: yarn publish
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
#    timeout-minutes: 15
